/* Variable de Color */

$bg-tp : rgba(255, 255, 255, 0.5);

/* Fonts */

@font-face {
    font-family: vladimir;
    src: url(../fonts/VLADIMIR.TTF);
}
/* Animation mixin */
@mixin move-up ($rem) {
    @if($rem > 0){
        transform: translateY(-$rem);
    }
}

/* Text Center and Highlight mixin */

@mixin center-highlight{
    text-align: center;
    font-weight: 500;
}

/* Input styling mixin */

@mixin input{
    border: none;
    border-radius: 4px;
    padding: .2rem;
}

/* Button styling mixin */

@mixin button{
    border-style: none;
    margin: .3rem;
    border-radius: 8px;
    background-color: clr(livianite, dark);
    transition: color 300ms;
        &:hover{
            color: clr(monochromatic, light);
            box-shadow: 0 0 5px clr(livianite, dark);
        }
}
/* Footer icon position & :before hover */
@mixin before-icon{
    content: attr(data-tip);
    font-size: small;
    padding: 2px;
    display: block;
    position: absolute;
    text-align: center;
    opacity: 0;
    transition: all .3s;
    pointer-events: none;
    color: clr(monochromatic, dark);
    background-color: $bg-tp;
}

@mixin footer-icon{
    position: absolute;
    text-decoration: none;
    width: 2rem;
}

/* Colors map */

$colors: (
    monochromatic: (light : #fff, gray-light : #777, gray-dark : #333, dark : #000),
    livianite: (base : #ceaffe, light : #dac2fe, dark : #b686fd ) 
);

/* Function to get color */

@function clr($type, $color){
    @return map-get(map-get($colors, $type), $color);
}

/* Label styling to @extend into other classes */

.lbl{
    color: clr(monochromatic, light);
    font-size: 1rem;
    padding:.1rem .3rem;
    display:block;
    position:absolute;
    top: .5rem;
}

